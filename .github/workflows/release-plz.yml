name: Release-plz

permissions:
  pull-requests: write
  issues: write # needed for labels
  contents: write

on:
  pull_request:
    types: [closed]
    branches: [ main ]

jobs:
  # Release unpublished packages.
  release-plz-release:
    name: Release-plz release
    runs-on: ubuntu-latest
    # This environment gives access to CARGO_REGISTRY_TOKEN, and requires approval
    environment: release 
    # only trigger this job if the push to main is from a merged PR with a "release" label
    if: >
      github.repository_owner == 'tkhq' &&
      github.event.pull_request.merged == true &&
      contains(github.event.pull_request.labels.*.name, 'release')
    permissions:
      contents: write
    steps:
      - name: git checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          # `fetch-depth: 0` is needed to clone all the git history, which is necessary to
          # release from the latest commit of the release PR.
          fetch-depth: 0
      - name: install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy,rustfmt
      - name: Run release-plz
        uses: release-plz/action@dde7b63054529c440305a924e5849c68318bcc9a #v0.5.107
        with:
          command: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  # Create a PR with the new versions and changelog, preparing the next release.
  release-plz-pr:
    name: Release-plz PR
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner == 'tkhq' }}
    permissions:
      contents: write
      pull-requests: write
    concurrency:
      group: release-plz-${{ github.ref }}
      cancel-in-progress: false
    steps:
      - name: git checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          # `fetch-depth: 0` is needed to clone all the git history, which is necessary to
          # determine the next version and build the changelog.
          fetch-depth: 0
      - name: install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy,rustfmt
      - name: Run release-plz
        uses: release-plz/action@dde7b63054529c440305a924e5849c68318bcc9a #v0.5.107
        with:
          command: release-pr
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
