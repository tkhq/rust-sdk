syntax = "proto3";

package private.signer.v1;

import "immutable/common/v1/common.proto";
import "immutable/models/v1/models.proto";
import "private/data/v1/organization_data.proto";

option go_package = "github.com/tkhq/mono/src/go/gen/pkg/private/signer/v1";

message ECDSASignaturePayload {
  // Signature "r" value, hex-encoded
  string r = 1;
  // Signature "s" value proving R.x, hex-encoded
  string s = 2;
  // Recovery byte, indicating whether R.y is odd or even ("r" == R.x)
  // This will always be "00" or "01"
  string v = 3;
}

message ECDSASignature {
  ECDSASignaturePayload payload = 1;
  immutable.models.v1.Signature signature = 2;
}

message PrivateKey {
  string public_key = 1;
  string encrypted_private_key = 2;
  string private_key_name = 3;
  immutable.common.v1.Curve curve = 4;
  repeated private.data.v1.Address addresses = 5;
  repeated string tags = 6;
  string organization_id = 7;
  bool imported = 8;
}

message KeyCreationPayload {
  repeated PrivateKey keys = 1;
  string ruling_digest = 2;
}

message KeyCreation {
  KeyCreationPayload payload = 1;
  immutable.models.v1.Signature signature = 2;
}

message Wallet {
  // we generate the id within the signer instead of the notarizer so we
  // can create verifiable accounts attached to the wallet by wallet_id
  string id = 1;
  string organization_id = 2;
  // encrypted_seed_inputs contains hex-encoded entropy + optional newline separated passphrase
  string encrypted_seed_inputs = 3;
  string wallet_name = 4;
  repeated string tags = 5;
  bool imported = 6;
}

message WalletCreationPayload {
  Wallet wallet = 1;
  repeated immutable.models.v1.Account accounts = 2;
  string ruling_digest = 3;
}

message WalletCreation {
  WalletCreationPayload payload = 1;
  immutable.models.v1.Signature signature = 2;
}

message KeyExportPayload {
  string key_id = 1;
  string organization_id = 2;
  string export_bundle = 3;
  string ruling_digest = 4;
}

message KeyExport {
  KeyExportPayload payload = 1;
  immutable.models.v1.Signature signature = 2;
}

message WalletExportPayload {
  string wallet_id = 1;
  string organization_id = 2;
  string export_bundle = 3;
  string ruling_digest = 4;
}

message WalletExport {
  WalletExportPayload payload = 1;
  immutable.models.v1.Signature signature = 2;
}

message AccountExportPayload {
  string address = 1;
  string organization_id = 2;
  string export_bundle = 3;
  string ruling_digest = 4;
}

message AccountExport {
  AccountExportPayload payload = 1;
  immutable.models.v1.Signature signature = 2;
}

message EncryptionKeyCreationPayload {
  string encryption_bundle = 1;
  string encrypted_target_key = 2;
  string organization_id = 3;
  string ruling_digest = 4;
}

message EncryptionKeyCreation {
  EncryptionKeyCreationPayload payload = 1;
  immutable.models.v1.Signature signature = 2;
}
