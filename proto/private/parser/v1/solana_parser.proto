syntax = "proto3";

package private.parser.v1;

import "immutable/models/v1/models.proto";

option go_package = "github.com/tkhq/mono/src/go/gen/pkg/private/parser/v1";

message SolanaMetadata {
  repeated string account_keys = 1;
  repeated string program_keys = 2;
  repeated SolanaInstruction instructions = 3;
  repeated SolTransfer transfers = 4;
  string recent_blockhash = 5;
  repeated SolanaAddressTableLookup address_table_lookups = 6;
  repeated SplTransfer spl_transfers = 7;
}

message SolanaInstruction {
  string program_key = 1;
  repeated SolanaAccount accounts = 2;
  string instruction_data_hex = 3;
  repeated SolanaSingleAddressTableLookup address_table_lookups = 5;
  optional SolanaParsedInstructionData parsed_instruction_data = 6;
}

message SolanaParsedInstructionData {
  string instruction_name = 1;
  string discriminator = 2;
  repeated SolanaNamedAccount named_accounts = 3;
  repeated ContractArgument program_call_args = 4;
}

message SolanaNamedAccount {
  string account_name = 1;
  string account_string = 2;
}

message ContractArgument {
  string arg_name = 1;
  ArgType arg = 2;
}

message ArgType {
  oneof kind {
    NullValue null_value = 1;
    double float_value = 2;
    string int_value = 3; // uses string protos to support i128 and u128
    string string_value = 4;
    bool bool_value = 5;
    StructValue struct_value = 6;
    ListValue list_value = 7;
  }

  enum NullValue {
    NULL_VALUE_UNSPECIFIED = 0;
  }

  message StructValue {
    repeated ContractArgument fields = 1;
  }

  message ListValue {
    repeated ArgType values = 1;
  }
}

message SolanaAccount {
  string account_key = 1;
  bool signer = 2;
  bool writable = 3;
}

message SolanaSingleAddressTableLookup {
  string address_table_key = 1;
  int32 index = 2;
  bool writable = 3;
}

message SolTransfer {
  string from = 1;
  string to = 2;
  string amount = 3;
}

message SolanaAddressTableLookup {
  string address_table_key = 1;
  repeated int32 writable_indexes = 2;
  repeated int32 readonly_indexes = 3;
}

message SolanaParsedTransactionPayload {
  SolanaMetadata transaction_metadata = 1;
  string unsigned_payload = 2;
  repeated SolanaIDLDigest idl_interface_digests = 3; // the digests over the details for any IDL's that were used to parse this transaction. these digests are also added to org data.
}

message SolanaIDLDigest {
  string program_id = 1;
  string digest = 2;
}

message SolanaParsedTransaction {
  SolanaParsedTransactionPayload payload = 1;
  immutable.models.v1.Signature signature = 2;
}

message SplTransfer {
  string from = 1;
  string to = 2;
  string amount = 3;
  string owner = 4;
  repeated string signers = 5;
  optional string token_mint = 6;
  optional string decimals = 7;
  optional string fee = 8;
}
