syntax = "proto3";

package external.data.v1;

import "external/data/v1/common.proto";
import "vendor/google/api/field_behavior.proto";
import "vendor/protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/tkhq/mono/src/go/gen/pkg/external/data/v1";

message BootProof {
  string ephemeral_public_key_hex = 1 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The hex encoded Ephemeral Public Key."}
  ];
  string aws_attestation_doc_b64 = 2 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The DER encoded COSE Sign1 struct Attestation doc."}
  ];
  string qos_manifest_b64 = 3 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The borsch serialized base64 encoded Manifest."}
  ];
  string qos_manifest_envelope_b64 = 4 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The borsch serialized base64 encoded Manifest Envelope."}
  ];
  string deployment_label = 5 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The label under which the enclave app was deployed."}
  ];
  string enclave_app = 6 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Name of the enclave app"}
  ];
  string owner = 7 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Owner of the app i.e. 'tkhq'"}
  ];
  Timestamp created_at = 8 [(google.api.field_behavior) = REQUIRED];
}

message AppProof {
  SignatureScheme scheme = 1 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Scheme of signing key."}
  ];
  string public_key = 2 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Ephemeral public key."}
  ];
  string proof_payload = 3 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "JSON serialized AppProofPayload."}
  ];
  string signature = 4 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Signature over hashed proof_payload."}
  ];
}

enum SignatureScheme {
  SIGNATURE_SCHEME_UNSPECIFIED = 0;
  // Scheme used by our enclave applications
  SIGNATURE_SCHEME_EPHEMERAL_KEY_P256 = 1;
}

message AppProofPayload {
  AppProofType type = 1 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Type of app proof"}
  ];
  string timestamp_ms = 2 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Timestamp of app proof creation. Comes directly from the NSM (Nitro Secure Module)."}
  ];
  oneof proof_payload {
    AddressDerivationProofPayload address_derivation_proof = 3;
  }
}

enum AppProofType {
  APP_PROOF_TYPE_UNSPECIFIED = 0;
  APP_PROOF_TYPE_ADDRESS_DERIVATION = 1;
}

message AddressDerivationProofPayload {
  string organization_id = 1 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Unique identifier for a given Organization."}
  ];
  optional string wallet_id = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Unique identifier for a given Wallet."}];
  optional string derivation_path = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Path corresponding to a wallet Account."}];
  string address = 4 [
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Derived cryptocurrency address."}
  ];
}
